<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.sp.boilerplate</groupId>
    <artifactId>springboot-boilerplate-starter-parent</artifactId>
    <version>0.0.1</version>
  </parent>
  <groupId>com.backend.boilerplate</groupId>
  <artifactId>springboot-boilerplate</artifactId>
  <version>1.0.0</version>
  <name>springboot-boilerplate</name>
  <description>generic springboot-boilerplate</description>

  <properties>
    <java.version>11</java.version>

    <javadoc.skip>true</javadoc.skip>
    <delombok.skip>true</delombok.skip>
    <animal-sniffer.skip>true</animal-sniffer.skip>
    <duplicate-finder.skip>true</duplicate-finder.skip>
    <jacoco.skip>true</jacoco.skip>
    <jacoco.exclude></jacoco.exclude>

    <!-- Sonar Properties -->
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.sources>src/main/</sonar.sources>
    <sonar.tests>src/test</sonar.tests>
    <sonar.coverage.jacoco.xmlReportPaths>docs/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.projectKey>yxz-abc</sonar.projectKey>
    <sonar.organization>xyz</sonar.organization>
    <sonar.inclusions>**/com/backend/boilerplate/**</sonar.inclusions>
    <sonar.exclusions>
      **/pom.xml,**/com/backend/boilerplate/dto/**,**/com/backend/boilerplate/constant/**,**/com/backend/boilerplate/exception/**,**/com/backend/boilerplate/entity/**,**/com/backend/boilerplate/web/exception/**
    </sonar.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.sp.boilerplate</groupId>
      <artifactId>boilerplate-commons</artifactId>
      <version>${boilerplate-commons.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sp.boilerplate</groupId>
      <artifactId>boilerplate-security</artifactId>
      <version>${boilerplate-security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- dependencies for cloud config - externalization of configurations -->
    <dependency>
      <groupId>io.awspring.cloud</groupId>
      <artifactId>spring-cloud-starter-aws</artifactId>
      <version>${spring-cloud-aws.version}</version>
    </dependency>

    <dependency>
      <groupId>io.awspring.cloud</groupId>
      <artifactId>spring-cloud-aws-parameter-store-config</artifactId>
      <version>${spring-cloud-aws.version}</version>
    </dependency>

    <!-- dependencies for actuator -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>

    <!-- moddelmapper for Dto to Entity conevrsion and vice-versa -->
    <dependency>
      <groupId>org.modelmapper</groupId>
      <artifactId>modelmapper</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
    </dependency>

    <!-- dependencies for data -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>

    <!-- JSON PATCH -->
    <dependency>
      <groupId>com.github.java-json-tools</groupId>
      <artifactId>json-patch</artifactId>
      <version>1.13</version>
    </dependency>

    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.johnzon</groupId>
      <artifactId>johnzon-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>${reflections.version}</version>
    </dependency>

    <!-- test containers -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mysql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>

    <!-- dependencies for testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate build info</id>
            <goals>
              <goal>build-info</goal>
              <goal>repackage</goal>
            </goals>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <mainClass>com.dazn.picks.DaznPicksApplication</mainClass>
              <useTestClasspath>true</useTestClasspath>
              <environmentVariables>
                <spring.liquibase.enabled>false</spring.liquibase.enabled>
                <spring.datasource.driver-class-name>org.h2.Driver</spring.datasource.driver-class-name>
              </environmentVariables>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <apiDocsUrl>http://localhost:8080/v3/api-docs</apiDocsUrl>
          <outputFileName>openapi.json</outputFileName>
          <outputDir>${project.basedir}/src/main/resources</outputDir>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <version>1.18.6.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>delombok</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <addOutputDirectory>false</addOutputDirectory>
          <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <charset>UTF-8</charset>
          <docencoding>UTF-8</docencoding>
          <destDir>docs/javadocs</destDir>
          <sourcepath>${project.basedir}/target/generated-sources/delombok</sourcepath>
          <skip>${javadoc.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.21</version>
        <configuration>
          <skip>${animal-sniffer.skip}</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <version>1.5.1</version>
        <configuration>
          <skip>${duplicate-finder.skip}</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.4</version>
        <configuration>
          <skip>${jacoco.skip}</skip>
          <includes>
            <include>com/backend/boilerplate/dao/impl/**</include>
            <include>com/backend/boilerplate/service/impl/**</include>
            <include>com/backend/boilerplate/util/**</include>
            <include>com/backend/boilerplate/web/controller/**</include>
          </includes>
          <excludes>
            <exclude>${jacoco.exclude}*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <outputDirectory>docs/jacoco</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>METHOD</counter>
                      <value>MISSEDCOUNT</value>
                      <maximum>0</maximum>
                    </limit>
                  </limits>
                </rule>
                <rule>
                  <element>METHOD</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>.6</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.sp.maven</groupId>
        <artifactId>sp-maven-plugin</artifactId>
        <version>0.0.1</version>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>baseline</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
</project>
